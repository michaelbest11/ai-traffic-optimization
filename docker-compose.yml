version: '3.8'

services:
  # Primary MongoDB Database
  mongodb-primary:
    image: mongo:5.0
    container_name: traffic-mongo-primary
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=traffic_db
      - MONGO_REPLICA_SET_NAME=rs0
    volumes:
      - mongo_primary_data:/data/db
      - ./mongo/primary:/etc/mongo
    command: mongod --replSet rs0 --bind_ip_all
    restart: unless-stopped
    networks:
      - traffic-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Secondary MongoDB (for read operations)
  mongodb-secondary:
    image: mongo:5.0
    container_name: traffic-mongo-secondary
    ports:
      - "27018:27017"
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
    volumes:
      - mongo_secondary_data:/data/db
    command: mongod --replSet rs0 --bind_ip_all
    depends_on:
      - mongodb-primary
    restart: unless-stopped
    networks:
      - traffic-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Backend API with resource limits
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: traffic-backend
    ports:
      - "8000:8000"
    environment:
      - MONGO_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017
      - DB_NAME=traffic_db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - HOST=0.0.0.0
      - PORT=8001
      - DEBUG=False
      - WORKERS=2
      - MAX_REQUESTS=1000
      - MAX_REQUESTS_JITTER=100
    volumes:
      - ./models:/app/models
    depends_on:
      - mongodb-primary
      - mongodb-secondary
    restart: unless-stopped
    networks:
      - traffic-network
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Nginx load balancer
  nginx:
    image: nginx:alpine
    container_name: traffic-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - traffic-network

volumes:
  mongo_primary_data:
  mongo_secondary_data:

networks:
  traffic-network:
    driver: bridge